// this file was generated by xml2godbus. You probably have to edit this file
package palette

import (
	"github.com/godbus/dbus/v5"
	"github.com/godbus/dbus/v5/introspect"
)

type Palette struct {
    bus *dbus.Conn
}

//Methods
func (p *Palette) Ping() (string,*dbus.Error) { 
}

func (p *Palette) Ping2() (string,*dbus.Error) { 
}

func (p *Palette) Ping3(name string) (string,*dbus.Error) { 
}

func (p *Palette) AnotherMethod(name string,id int,juj int64,array []string,another_id int) (map[string]int,*dbus.Error) { 
}



//Signals
func (p *Palette) EmitPingedSignal(param string) {
    p.bus.Emit(p.GetObjectPath(), p.GetInterfacePath()+".Pinged", param)
}

func (p *Palette) EmitPinged2Signal(param string) {
    p.bus.Emit(p.GetObjectPath(), p.GetInterfacePath()+".Pinged2", param)
}



//Utils
func (p *Palette) GetObjectPath() dbus.ObjectPath {
	return dbus.ObjectPath("com/github/jeysonflores/DBusTest/Palette")
}

func (p *Palette) GetInterfacePath() string {
	return "com.github.jeysonflores.DBusTest.Palette"
}

func (p *Palette) GetIntroData() string {
        return `<node>
	<interface name="com.github.jeysonflores.DBusTest.Palette">
		<method name="Ping">
			<arg name="result" direction="out" type="s"/>
		</method>
		<method name="Ping2">
			<arg name="result" direction="out" type="s"/>
		</method>
		<method name="Ping3">
			<arg name="name" direction="in" type="s"/>
			<arg name="result" direction="out" type="s"/>
		</method>
		<method name="AnotherMethod">
			<arg name="name" direction="in" type="s"/>
			<arg name="id" direction="in" type="i"/>
			<arg name="juj" direction="in" type="x"/>
			<arg name="array" direction="in" type="as"/>
			<arg name="another_id" direction="in" type="i"/>
			<arg name="result" direction="out" type="a{si}"/>
		</method>
		<signal name="Pinged">
			<arg name="param" direction="out" type="s"/>
		</signal>
		<signal name="Pinged2">
			<arg name="param" direction="out" type="s"/>
		</signal>
	</interface>
    <interface name="org.freedesktop.DBus.Introspectable">
        <method name="Introspect">
                <arg name="out" direction="out" type="s"/>
        </method>
    </interface>
</node>`
}

